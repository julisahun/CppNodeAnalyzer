0 translation_unit int main() {
  int a = 2+1;
  int b = 2;
  a = b;
  while(a > (2 + 2)) {}
  return 0;
}
1 function_definition int main() {
  int a = 2+1;
  int b = 2;
  a = b;
  while(a > (2 + 2)) {}
  return 0;
}
2 compound_statement {
  int a = 2+1;
  int b = 2;
  a = b;
  while(a > (2 + 2)) {}
  return 0;
}
3 { {
3 declaration int a = 2+1;
4 binary_expression 2+1
5 number_literal 2
5 + +
5 number_literal 1
3 declaration int b = 2;
4 number_literal 2
3 expression_statement a = b;
4 identifier b
3 while_statement while(a > (2 + 2)) {}
4 while while
4 condition_clause (a > (2 + 2))
5 ( (
5 binary_expression a > (2 + 2)
6 identifier a
6 > >
6 parenthesized_expression (2 + 2)
7 ( (
7 binary_expression 2 + 2
8 number_literal 2
8 + +
8 number_literal 2
7 ) )
5 ) )
4 compound_statement {}
5 { {
5 } }
3 return_statement return 0;
4 return return
4 number_literal 0
4 ; ;
3 } }
{ a: { used: true, type: 'int' }, b: { used: true, type: 'int' } }
